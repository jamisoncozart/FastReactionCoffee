{"version":3,"sources":["Components/Header/Header.js","Components/Body/Coffee/BrewButtons/BrewButtons.js","Components/Body/Coffee/Coffee.js","Components/Body/NewCoffeeForm/NewCoffeeForm.js","Components/Body/BrewDetails/BrewDetails.js","Components/Body/Body.js","Components/Footer/Footer.js","Components/App.js","serviceWorker.js","index.js"],"names":["Header","props","className","BrewButtons","onClick","event","handleRefillingCoffeeQuantity","id","quantity","console","log","handleDecrementingCoffeeQuantity","Coffee","handleShowCoffeeDetails","src","image","alt","name","NewCoffeeForm","onSubmit","preventDefault","onNewBrewCreation","v4","target","Name","value","description","Description","Image","placeholder","BrewDetails","handleBackToMainPage","Body","currentBrew","state","Coffees","filter","coffee","setState","ShowDetailsPage","CurrentBrew","handleNewBrewCreation","newBrew","coffeeToDecrement","updatedCoffee","coffeeList","this","Fragment","sortedCoffees","sort","a","b","textA","toUpperCase","textB","map","index","key","renderBody","React","Component","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2a4d9f29.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div className=\"Header\">\r\n      <h1>Fast Reaction Coffee</h1>\r\n      <h4>Taproom hosting local coffee brews from all over Oregon</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BrewButtons = props => {\r\n\r\n  function handleClickPropogation(event) {\r\n    return props.handleRefillingCoffeeQuantity(props.id);\r\n  }\r\n\r\n  function hideTapIfSoldOut() {\r\n    console.log(props.quantity);\r\n    if(props.quantity <= 0) {\r\n      return;\r\n    } else {\r\n      return <button onClick={() => props.handleDecrementingCoffeeQuantity(props.id)}>Tap</button>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"BrewButtons\">\r\n      <button onClick={handleClickPropogation}>Refill</button>\r\n      <div className=\"BrewQuantity\">\r\n        <p className=\"BrewAmount\">{props.quantity}</p>\r\n        <p className=\"cups\">Cups</p>\r\n      </div>\r\n      {hideTapIfSoldOut()}\r\n    </div>\r\n  )\r\n}\r\n\r\nBrewButtons.propTypes = {\r\n  handleRefillingCoffeeQuantity: PropTypes.func,\r\n  quantity: PropTypes.number,\r\n  handleDecrementingCoffeeQuantity: PropTypes.func,\r\n  id: PropTypes.string\r\n}\r\n\r\nexport default BrewButtons;","import React from 'react';\r\nimport BrewButtons from './BrewButtons/BrewButtons';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Coffee = props => {\r\n  return (\r\n    <div className=\"Coffee\">\r\n      <div onClick={() => props.handleShowCoffeeDetails(props.id)} className=\"imgDiv\">\r\n        <img src={props.image} alt=\"Coffee Profile\" />\r\n      </div>\r\n      <div className=\"CoffeeInfo\">\r\n        <h3>{props.name}</h3>\r\n        <BrewButtons \r\n          handleDecrementingCoffeeQuantity={props.handleDecrementingCoffeeQuantity} \r\n          quantity={props.quantity}\r\n          handleRefillingCoffeeQuantity={props.handleRefillingCoffeeQuantity}\r\n          id={props.id} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCoffee.propTypes = {\r\n  handleShowCoffeeDetails: PropTypes.func,\r\n  id: PropTypes.string,\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  handleDecrementingCoffeeQuantity: PropTypes.func,\r\n  handleRefillingCoffeeQuantity: PropTypes.func\r\n}\r\n\r\nexport default Coffee;","import React from 'react';\r\nimport { v4 } from 'uuid';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NewCoffeeForm = props => {\r\n\r\n  function handleNewBrewSubmit(event) {\r\n    event.preventDefault();\r\n    props.onNewBrewCreation({\r\n      id: v4(),\r\n      name: event.target.Name.value,\r\n      description: event.target.Description.value,\r\n      image: event.target.Image.value,\r\n      quantity: 20\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleNewBrewSubmit} className=\"NewCoffeeForm\">\r\n      <h2>Add New Brew</h2>\r\n      <input placeholder=\"Brew Name\" name=\"Name\" />\r\n      <input placeholder=\"Description\" name=\"Description\" />\r\n      <input placeholder=\"Image URL\" name=\"Image\" />\r\n      <button>Add Brew</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nNewCoffeeForm.propTypes = {\r\n  onNewBrewCreation: PropTypes.func\r\n}\r\n\r\nexport default NewCoffeeForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BrewDetails = props => {\r\n  return (\r\n    <div className=\"BrewDetails\">\r\n      <div className=\"DetailsImageDiv\">\r\n        <img src={props.image} alt=\"Coffee Profile\" />\r\n      </div>\r\n      <h2>{props.name}</h2>\r\n      <p className=\"BrewDescription\">{props.description}</p>\r\n      <button onClick={props.handleBackToMainPage}>Back to Brews</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nBrewDetails.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  description: PropTypes.string,\r\n  handleBackToMainPage: PropTypes.func\r\n}\r\n\r\nexport default BrewDetails;","import React from 'react';\r\nimport Coffee from './Coffee/Coffee';\r\nimport NewCoffeeForm from './NewCoffeeForm/NewCoffeeForm';\r\nimport BrewDetails from './BrewDetails/BrewDetails';\r\n\r\nclass Body extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Coffees: [\r\n        {\r\n          id: \"1ce6c951-a2c4-4dac-863a-a6a2de0e02fb\",\r\n          name: \"Chai Cinnamon Latte\",\r\n          description: \"Creamy blend of Chai with suttle hints of cinnamon churned to perfection.\",\r\n          image: \"https://www.ohhowcivilized.com/wp-content/uploads/2013/01/0918-cha-tea-latte-16.jpg\",\r\n          quantity: 20\r\n        },\r\n        {\r\n          id: \"558bae53-5d09-458c-b1a4-cbea0ba3bf01\",\r\n          name: \"Noggaccino\",\r\n          description: \"Smooth eggnog with hints of nutmeg and cinammon scattered throughout.\",\r\n          image: \"https://www.laweekly.com/wp-content/uploads/2019/05/xmascoffee_menottis.jpg\",\r\n          quantity: 20\r\n        },\r\n        {\r\n          id: \"a2d348d3-7c3d-40c6-b0e1-b6248a885f99\",\r\n          name: \"Columbian Black\",\r\n          description: \"Earthy and hearty with a crispt taste of raw coffee.\",\r\n          image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTuyUYEfmi1zTzuT3huhXyHdh9Qnz0b0bIdvPI0TnfrTdi-KO6J&usqp=CAU\",\r\n          quantity: 20\r\n        },\r\n        {\r\n          id: \"f38ade84-2035-4e91-90e0-7e0cccafb848\",\r\n          name: \"Iced Dark Roast\",\r\n          description: \"Cold and crisp with chocolatey undertones mixed with rich coffee.\",\r\n          image: \"https://www.tasteofhome.com/wp-content/uploads/2018/01/exps9452_SA1754024B03_22_1bC_WEB-1-696x696.jpg\",\r\n          quantity: 20\r\n        },\r\n        {\r\n          id: \"c80f4400-0f81-4c57-a088-7147f64cb302\",\r\n          name: \"Caramel Vanilla frappuccino\",\r\n          description: \"Sticky Caramel mixed with a strong vanilla cream blended into medium roast.\",\r\n          image: \"https://www.happyfoodstube.com/wp-content/uploads/2019/07/iced-caramel-latte-picture-500x500.jpg\",\r\n          quantity: 20\r\n        },\r\n        {\r\n          id: \"9de52891-05a6-4027-b555-78763b443cf8\",\r\n          name: \"Peppermint Hot Cocoa\",\r\n          description: \"Strong peppermint infused with a deep chocolate flavor.\",\r\n          image: \"https://food.fnr.sndimg.com/content/dam/images/food/fullset/2013/10/18/0/FNK_Peppermint-Hot-Cocoa_s4x3.jpg.rend.hgtvcom.616.462.suffix/1383787064560.jpeg\",\r\n          quantity: 20\r\n        }\r\n      ],\r\n      ShowDetailsPage: false,\r\n      CurrentBrew: {}\r\n    }\r\n  }\r\n\r\n  handleShowCoffeeDetails = (id) => {\r\n    let currentBrew = this.state.Coffees.filter(coffee => coffee.id === id)[0];\r\n    this.setState({\r\n      ShowDetailsPage: true,\r\n      CurrentBrew: {...currentBrew}\r\n    })\r\n  }\r\n\r\n  handleBackToMainPage = () => {\r\n    this.setState({\r\n      ShowDetailsPage: false\r\n    });\r\n  }\r\n\r\n  handleNewBrewCreation = (newBrew) => {\r\n    this.setState({\r\n      Coffees: [...this.state.Coffees, newBrew]\r\n    });\r\n  }\r\n\r\n  handleDecrementingCoffeeQuantity = (id) => {\r\n    const coffeeToDecrement = this.state.Coffees.filter(coffee => coffee.id === id)[0];\r\n    const updatedCoffee = {...coffeeToDecrement, quantity: coffeeToDecrement.quantity-1};\r\n    const coffeeList = this.state.Coffees.filter(coffee => coffee.id !== id);\r\n    this.setState({\r\n      Coffees: [...coffeeList, updatedCoffee]\r\n    })\r\n  }\r\n\r\n  handleRefillingCoffeeQuantity = (id) => {\r\n    const coffeeToDecrement = this.state.Coffees.filter(coffee => coffee.id === id)[0];\r\n    const updatedCoffee = {...coffeeToDecrement, quantity: 20};\r\n    const coffeeList = this.state.Coffees.filter(coffee => coffee.id !== id);\r\n    this.setState({\r\n      Coffees: [...coffeeList, updatedCoffee]\r\n    })\r\n  }\r\n\r\n  renderBody() {\r\n    if(this.state.ShowDetailsPage) {\r\n      return (\r\n        <React.Fragment>\r\n          <BrewDetails \r\n            image={this.state.CurrentBrew.image}\r\n            name={this.state.CurrentBrew.name}\r\n            description={this.state.CurrentBrew.description}\r\n            handleBackToMainPage={this.handleBackToMainPage}/>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      const sortedCoffees = this.state.Coffees.sort(function(a, b) {\r\n        var textA = a.name.toUpperCase();\r\n        var textB = b.name.toUpperCase();\r\n        return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n      });\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"Coffees\">\r\n            {sortedCoffees.map((coffee, index) => (\r\n              <Coffee \r\n                id={coffee.id}\r\n                name={coffee.name}\r\n                image={coffee.image}\r\n                quantity={coffee.quantity}\r\n                handleShowCoffeeDetails={this.handleShowCoffeeDetails}\r\n                handleDecrementingCoffeeQuantity={this.handleDecrementingCoffeeQuantity}\r\n                handleRefillingCoffeeQuantity={this.handleRefillingCoffeeQuantity}\r\n                key={index} />\r\n            ))}\r\n          </div>\r\n          <NewCoffeeForm onNewBrewCreation={this.handleNewBrewCreation}/>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"Body\">\r\n        {this.renderBody()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <div className=\"Footer\">\r\n      <p>&copy; 2020 - Jamison Cozart</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport Body from './Body/Body';\r\nimport Footer from './Footer/Footer';\r\nimport '../App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <Body />\r\n      <Footer />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}